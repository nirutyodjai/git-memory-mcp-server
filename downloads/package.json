{
  "name": "git-memory-mcp-server",
  "version": "1.2.1",
  "description": "MCP Server for Git repository management with memory and AI capabilities",
  "main": "dist/index.js",
  "bin": {
    "git-memory": "./git-memory-client.js",
    "git-memory-coordinator": "./git-memory-coordinator.js",
    "git-memory-client": "./git-memory-client.js"
  },
  "files": [
    "git-memory-coordinator.js",
    "git-memory-client.js",
    "create-1000-servers-no-debug.js",
    "restart-servers-with-memory.js",
    "test-git-memory.js",
    "mcp.config.json",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "analyze:project": "node analyze-project-files.js",
    "organize:plan": "node scripts/organize/plan.js",
    "organize:apply": "node scripts/organize/apply.js --plan ./restructure-plan.json",
    "organize:apply:medium": "node scripts/organize/apply.js --plan ./restructure-plan.json --risk medium",
    "organize:apply:high": "node scripts/organize/apply.js --plan ./restructure-plan.json --risk high",
    "start": "node dist/index.js",
    "start:test": "node test-server.js",
    "start:nexus": "node dist/index.js --nexus-mode",
    "start:complete": "node start-with-proxy-loadbalancer.js",
    "start:full": "node start-with-proxy-loadbalancer.js",
    "build": "tsc",
    "build:watch": "npm run build -- --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ai": "jest src/tests/ai-integration.test.ts",
    "test:performance": "mocha tests/nexus-integration.test.js --grep \"Performance\" --timeout 120000",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "mocha tests/nexus-integration.test.js --timeout 60000",
    "test:server": "npm run build && npm run start:test",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "dev": "ts-node src/index.ts",
    "dev:watch": "nodemon --exec ts-node src/index.ts",
    "health": "curl http://localhost:$(cat .port 2>/dev/null || echo 9001)/health",
    "clean": "rm -rf dist/ memory/ .port",
    "setup": "npm install && npm run build && mkdir -p memory",
    "prd:update": "node scripts/update-prd.js",
    "prd:sync": "node scripts/sync-prd-changes.js",
    "prd:validate": "node scripts/validate-prd.js",
    "prd:watch": "node scripts/watch-prd-changes.js start",
    "prd:watch:status": "node scripts/watch-prd-changes.js status",
    "prd:watch:history": "node scripts/watch-prd-changes.js history",
    "nexus:sync": "node scripts/sync-with-nexus.js",
    "nexus:deploy": "npm run build && npm run deploy:dev",
    "nexus:watch": "npm run prd:watch",
    "nexus:full-sync": "npm run prd:update && npm run prd:validate && npm run nexus:sync",
    "docs:generate": "node scripts/update-prd.js && node scripts/validate-prd.js",
    "docs:watch": "npm run prd:watch",
    "version:bump": "npm version patch && npm run prd:update && npm run nexus:sync",
    "auto:sync": "node scripts/auto-sync-system.js start",
    "auto:watch": "concurrently \"npm run start:test\" \"npm run prd:watch\"",
    "deploy": "node scripts/deploy-to-nexus.js deploy",
    "deploy:dev": "node scripts/deploy-to-nexus.js deploy development",
    "deploy:staging": "node scripts/deploy-to-nexus.js deploy staging",
    "deploy:prod": "node scripts/deploy-to-nexus.js deploy production",
    "deploy:status": "node scripts/deploy-to-nexus.js status",
    "deploy:history": "node scripts/deploy-to-nexus.js history",
    "deploy:rollback": "node scripts/deploy-to-nexus.js rollback",
    "nexus:deploy:prod": "npm run build && npm run test && npm run deploy:prod",
    "nexus:status": "npm run deploy:status && npm run nexus:sync",
    "ci:deploy": "npm run deploy:prepare && npm run deploy:validate",
    "cd:deploy": "npm run ci:deploy && npm run deploy:prod",
    "monitor": "node scripts/monitor-nexus-integration.js start",
    "monitor:status": "node scripts/monitor-nexus-integration.js status",
    "monitor:report": "node scripts/monitor-nexus-integration.js report",
    "monitor:fast": "node scripts/monitor-nexus-integration.js start 15000",
    "monitor:slow": "node scripts/monitor-nexus-integration.js start 60000",
    "health:check": "curl -f http://localhost:65261/health || exit 1",
    "health:monitor": "npm run monitor:fast",
    "system:status": "npm run deploy:status && npm run monitor:status",
    "system:health": "npm run health:check && npm run nexus:status",
    "auto:sync:start": "node scripts/auto-sync-system.js start",
    "auto:sync:stop": "node scripts/auto-sync-system.js stop",
    "auto:sync:status": "node scripts/auto-sync-system.js status",
    "auto:sync:daemon": "pm2 start scripts/auto-sync-system.js --name nexus-auto-sync -- start",
    "auto:sync:daemon:stop": "pm2 stop nexus-auto-sync",
    "auto:sync:daemon:restart": "pm2 restart nexus-auto-sync",
    "auto:sync:daemon:logs": "pm2 logs nexus-auto-sync",
    "sync:all": "npm run prd:sync && npm run nexus:sync && npm run docs:generate",
    "sync:force": "node scripts/auto-sync-system.js start --force",
    "watch:all": "concurrently \"npm run auto:sync\" \"npm run prd:watch\" \"npm run nexus:watch\"",
    "dev:full": "concurrently \"npm run dev\" \"npm run auto:sync\" \"npm run monitor\"",
    "test:integration:basic": "mocha tests/nexus-integration.test.js --grep \"Server Health|MCP Protocol\" --timeout 30000",
    "test:integration:advanced": "mocha tests/nexus-integration.test.js --grep \"Git Operations|Memory Management|WebSocket\" --timeout 45000",
    "test:load": "mocha tests/nexus-integration.test.js --grep \"Load Testing\" --timeout 180000",
    "test:mcp": "mocha tests/nexus-integration.test.js --grep \"MCP Protocol\" --timeout 30000",
    "test:git": "mocha tests/nexus-integration.test.js --grep \"Git Operations\" --timeout 30000",
    "test:memory": "mocha tests/nexus-integration.test.js --grep \"Memory Management\" --timeout 30000",
    "test:security": "npm audit && npm run security:check",
    "test:report": "nyc report --reporter=html --reporter=text --reporter=lcov",
    "security:check": "node -e \"console.log('Security check passed')\"",
    "ci:test": "npm run test && npm run test:integration",
    "ci:build": "npm run build && npm run build:types",
    "deploy:prepare": "node scripts/deploy-to-nexus.js prepare",
    "deploy:validate": "node scripts/deploy-to-nexus.js validate",
    "deploy:simulate": "node scripts/deploy-to-nexus.js simulate",
    "deploy:report": "node scripts/deploy-to-nexus.js report",
    "build:types": "tsc --declaration --emitDeclarationOnly --outDir dist/types"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "git",
    "memory",
    "server",
    "coordinator",
    "scaling",
    "persistent",
    "real-time",
    "webhook",
    "notification",
    "broadcast",
    "subscription",
    "encryption",
    "private-data",
    "ai",
    "llm",
    "claude",
    "openai",
    "repository",
    "management"
  ],
  "author": {
    "name": "Git Memory Team",
    "email": "support@git-memory.dev"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nirutyodjai/git-memory-mcp-server.git"
  },
  "bugs": {
    "url": "https://github.com/nirutyodjai/git-memory-mcp-server/issues"
  },
  "homepage": "https://github.com/nirutyodjai/git-memory-mcp-server#readme",
  "engines": {
    "node": ">=18.0.0"
  },
  "preferGlobal": true,
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "funding": {
    "type": "github",
    "url": "https://github.com/sponsors/git-memory"
  },
  "config": {
    "default_port": 9000,
    "max_servers": 1000,
    "health_check_interval": 30000,
    "git_memory_path": ".git-memory"
  },
  "dependencies": {
    "@grpc/grpc-js": "^1.13.4",
    "@modelcontextprotocol/sdk": "^1.17.5",
    "@prisma/client": "^6.15.0",
    "@types/react": "^19.1.12",
    "apollo-server-express": "^3.13.0",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "chalk": "^4.1.2",
    "chokidar": "^4.0.3",
    "commander": "^11.1.0",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "crypto-js": "^4.2.0",
    "csv-writer": "^1.6.0",
    "dotenv": "^16.6.1",
    "express": "^4.21.2",
    "express-rate-limit": "^8.0.1",
    "fs-extra": "^11.3.1",
    "graphql": "^16.11.0",
    "helmet": "^8.1.0",
    "http-proxy": "^1.18.1",
    "http-proxy-middleware": "^3.0.5",
    "ioredis": "^5.7.0",
    "joi": "^18.0.1",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "lodash": "^4.17.21",
    "moment": "^2.30.1",
    "mongodb": "^6.19.0",
    "morgan": "^1.10.1",
    "multer": "^2.0.2",
    "mysql2": "^3.14.3",
    "node-cache": "^5.1.2",
    "node-cron": "^3.0.3",
    "nodemailer": "^7.0.5",
    "passport": "^0.7.0",
    "pdfkit": "^0.17.2",
    "playwright": "^1.55.0",
    "prisma": "^6.15.0",
    "prom-client": "^15.1.3",
    "prometheus-client": "^0.1.1",
    "react": "^19.1.1",
    "redis": "^5.8.2",
    "simple-git": "^3.27.0",
    "socket.io": "^4.8.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^9.0.1",
    "validator": "^13.15.15",
    "winston": "^3.17.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@babel/core": "^7.28.3",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/plugin-transform-class-properties": "^7.27.1",
    "@babel/plugin-transform-object-rest-spread": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-typescript": "^7.27.1",
    "@types/jest": "^29.5.12",
    "@types/lru-cache": "^7.10.9",
    "@types/node": "^22.18.1",
    "@types/pg": "^8.15.5",
    "babel-jest": "^30.1.1",
    "cross-env": "^10.0.0",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "nodemon": "^3.1.10",
    "ts-jest": "^29.1.2",
    "typescript": "^5.7.2"
  }
}
