version: '3.8'

services:
  # Main Git Memory MCP Server
  git-memory-server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: git-memory-mcp-server-dev
    ports:
      - "3000:3000"   # HTTP API
      - "9229:9229"   # Debug port for Node.js inspector
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - GIT_MEMORY_API_KEY=${GIT_MEMORY_API_KEY:-dev-api-key-123}
      - GIT_MEMORY_ALLOWED_REPOS=${GIT_MEMORY_ALLOWED_REPOS:-/app/repos}
      - PORT=3000
      - ENABLE_TRACING=true
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    volumes:
      - .:/app                           # Mount source code for development
      - ./repos:/app/repos                # Mount repositories
      - ./logs:/app/logs                  # Persistent logs
      - ./.env:/app/.env:ro              # Environment variables
    depends_on:
      - redis
      - jaeger
    networks:
      - git-memory-network
    restart: unless-stopped
    command: npm run dev  # Use nodemon for auto-restart
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: git-memory-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-gitmemorydev}
    networks:
      - git-memory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: git-memory-jaeger-dev
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger collector (accept)
      - "14250:14250"  # Jaeger collector (gRPC)
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=info
    volumes:
      - jaeger_dev_data:/tmp/jaeger
    networks:
      - git-memory-network
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: git-memory-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.dev.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=24h'  # Shorter retention for dev
      - '--web.enable-lifecycle'
    networks:
      - git-memory-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: git-memory-grafana-dev
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - git-memory-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Load testing container for development
  load-tester:
    build:
      context: .
      dockerfile: Dockerfile.loadtest
    container_name: git-memory-load-tester-dev
    environment:
      - TARGET_URL=http://git-memory-server:3000
      - API_KEY=${GIT_MEMORY_API_KEY:-dev-api-key-123}
      - VIRTUAL_USERS=50
      - TEST_DURATION=300
    volumes:
      - ./test:/app/test:ro
    networks:
      - git-memory-network
    profiles:
      - testing

  # Database for storing repository metadata (optional)
  postgres:
    image: postgres:15-alpine
    container_name: git-memory-postgres-dev
    environment:
      - POSTGRES_DB=git_memory_dev
      - POSTGRES_USER=git_memory
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gitmemorydev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - git-memory-network
    restart: unless-stopped
    profiles:
      - database

volumes:
  redis_dev_data:
    driver: local
  jaeger_dev_data:
    driver: local
  prometheus_dev_data:
    driver: local
  grafana_dev_data:
    driver: local
  postgres_dev_data:
    driver: local

networks:
  git-memory-network:
    driver: bridge
