{
  "$schema": "https://github.com/modelcontextprotocol/typescript-sdk/blob/main/src/types.ts",
  "mcpServers": {
    "playwright": {
      "name": "Playwright",
      "description": "Browser automation and web testing with Playwright integration for Trae AI",
      "endpoint": "/api/mcp/playwright",
      "version": "1.0.0",
      "capabilities": [
        "get_context",
        "get_full_dom",
        "get_screenshot",
        "execute_code",
        "init_browser",
        "validate_selectors",
        "navigate_to_url",
        "click_element",
        "fill_input",
        "wait_for_element",
        "extract_text",
        "generate_test_code",
        "run_test"
      ],
      "rateLimit": {
        "requests": 30,
        "window": "15m"
      },
      "config": {
        "browserType": "chromium",
        "headless": false,
        "timeout": 30000,
        "viewport": {
          "width": 1280,
          "height": 720
        },
        "enableScreenshots": true,
        "enableTracing": true,
        "enableVideo": false
      }
    },
    "multi-fetch": {
      "name": "Multi Fetch",
      "description": "Fetch websites and return content in various formats (HTML, JSON, text, markdown)",
      "endpoint": "/api/mcp/fetch",
      "version": "1.0.0",
      "capabilities": [
        "fetch_html",
        "fetch_json",
        "fetch_txt",
        "fetch_markdown",
        "fetch_plaintext"
      ],
      "rateLimit": {
        "requests": 100,
        "window": "15m"
      },
      "config": {
        "maxContentSize": 52428800,
        "defaultTimeout": 30000,
        "maxRedirects": 10,
        "enableContentSplitting": true,
        "supportedFormats": ["html", "json", "text", "markdown", "plaintext"]
      }
    },
    "blender": {
      "name": "Blender",
      "description": "Integration with Blender 3D software and external asset libraries",
      "endpoint": "/api/mcp/blender",
      "version": "1.0.0",
      "capabilities": [
        "get_scene_info",
        "get_object_info",
        "get_viewport_screenshot",
        "execute_blender_code",
        "get_polyhaven_categories",
        "search_polyhaven_assets",
        "download_polyhaven_asset",
        "set_texture",
        "search_sketchfab_models",
        "download_sketchfab_model",
        "generate_hyper3d_model_via_text"
      ],
      "rateLimit": {
        "requests": 50,
        "window": "15m"
      },
      "config": {
        "blenderPath": null,
        "autoConnect": false,
        "supportedAssetTypes": ["hdris", "textures", "models"],
        "supportedResolutions": ["1k", "2k", "4k", "8k"],
        "supportedFormats": {
          "hdris": ["hdr", "exr"],
          "textures": ["jpg", "png", "exr"],
          "models": ["gltf", "fbx", "obj"]
        }
      }
    },
    "sequential-thinking": {
      "name": "Sequential Thinking",
      "description": "Structured thinking and problem-solving processes",
      "endpoint": "/api/mcp/thinking",
      "version": "1.0.0",
      "capabilities": [
        "get_templates",
        "add_template",
        "create_process",
        "get_process",
        "delete_process",
        "start_process",
        "start_step",
        "complete_step",
        "fail_step",
        "get_progress",
        "export_process",
        "import_process"
      ],
      "rateLimit": {
        "requests": 200,
        "window": "15m"
      },
      "config": {
        "maxProcesses": 100,
        "maxStepsPerProcess": 50,
        "autoSave": true,
        "defaultTemplates": [
          "problem-solving",
          "design-thinking",
          "software-development",
          "research",
          "decision-making"
        ]
      }
    },
    "shadcn-ui": {
      "name": "Shadcn UI",
      "description": "Access to shadcn/ui v4 components, blocks, demos, and metadata for React, Svelte, and Vue",
      "endpoint": "/api/mcp/shadcn-ui",
      "version": "1.1.0",
      "capabilities": [
        "get_component",
        "get_component_source",
        "get_component_demo",
        "get_block",
        "get_block_source",
        "list_components",
        "list_blocks",
        "get_metadata",
        "browse_directory",
        "search_components"
      ],
      "rateLimit": {
        "requests": 100,
        "window": "15m"
      },
      "config": {
        "framework": "react",
        "repository": "shadcn-ui/ui",
        "fileExtension": ".tsx",
        "enableCaching": true,
        "githubApiKey": "auto-detected"
      }
    },
    "magic-ui": {
      "name": "Magic UI",
      "description": "Official Magic UI MCP server for accessing Magic UI components and animations",
      "endpoint": "/api/mcp/magic-ui",
      "version": "1.0.6",
      "capabilities": [
        "getUIComponents",
        "getLayout",
        "getMedia",
        "getMotion",
        "getTextReveal",
        "getTextEffects",
        "getButtons",
        "getEffects",
        "getWidgets",
        "getBackgrounds",
        "getDevices"
      ],
      "rateLimit": {
        "requests": 100,
        "window": "15m"
      },
      "config": {
        "command": "npx",
        "args": ["-y", "@magicuidesign/mcp@latest"],
        "enableCaching": true
      }
    },
    "google-workspace": {
      "name": "Google Workspace",
      "description": "Complete Google Workspace integration with Gmail, Calendar, Drive, Docs, Sheets, Slides, Forms, Tasks, and Chat",
      "endpoint": "/api/mcp/google-workspace",
      "version": "1.0.0",
      "capabilities": [
        "gmail_list_messages",
        "gmail_send_message",
        "gmail_get_message",
        "gmail_delete_message",
        "calendar_list_events",
        "calendar_create_event",
        "calendar_update_event",
        "calendar_delete_event",
        "drive_list_files",
        "drive_upload_file",
        "drive_download_file",
        "drive_delete_file",
        "docs_create_document",
        "docs_get_document",
        "docs_update_document",
        "sheets_create_spreadsheet",
        "sheets_get_values",
        "sheets_update_values",
        "slides_create_presentation",
        "slides_get_presentation",
        "forms_create_form",
        "forms_get_form",
        "tasks_list_tasks",
        "tasks_create_task",
        "chat_send_message",
        "search_custom"
      ],
      "rateLimit": {
        "requests": 100,
        "window": "15m"
      },
      "config": {
        "command": "uvx",
        "args": ["workspace-mcp", "--tool-tier", "core"],
        "enableCaching": true,
        "authType": "oauth2",
        "scopes": [
          "https://www.googleapis.com/auth/gmail.modify",
          "https://www.googleapis.com/auth/calendar",
          "https://www.googleapis.com/auth/drive",
          "https://www.googleapis.com/auth/documents",
          "https://www.googleapis.com/auth/spreadsheets",
          "https://www.googleapis.com/auth/presentations",
          "https://www.googleapis.com/auth/forms",
          "https://www.googleapis.com/auth/tasks",
          "https://www.googleapis.com/auth/chat.messages"
        ]
      }
    },
    "memory": {
      "name": "Memory",
      "description": "Memory management and data storage with advanced querying",
      "endpoint": "/api/mcp/memory",
      "version": "1.0.0",
      "capabilities": [
        "set",
        "get",
        "delete",
        "query",
        "search",
        "bulk_set",
        "bulk_get",
        "bulk_delete",
        "stats",
        "backup",
        "restore",
        "configure",
        "clear",
        "expire"
      ],
      "rateLimit": {
        "requests": 500,
        "window": "15m"
      },
      "config": {
        "maxSize": 104857600,
        "defaultTTL": 3600000,
        "enableCompression": true,
        "enableEncryption": false,
        "autoCleanup": true,
        "cleanupInterval": 300000,
        "supportedTypes": ["string", "number", "boolean", "object", "array"]
      }
    }
  },
  "global": {
    "baseUrl": "http://localhost:3000",
    "timeout": 30000,
    "retries": 3,
    "retryDelay": 1000,
    "userAgent": "MCP-Client/1.0.0",
    "headers": {
      "Content-Type": "application/json",
      "Accept": "application/json"
    },
    "security": {
      "enableRateLimit": true,
      "enableCORS": true,
      "allowedOrigins": ["http://localhost:3000", "https://localhost:3000"],
      "enableCSRF": false
    },
    "logging": {
      "level": "info",
      "enableRequestLogging": true,
      "enableErrorLogging": true,
      "logFormat": "json"
    },
    "monitoring": {
      "enableMetrics": true,
      "enableHealthCheck": true,
      "healthCheckInterval": 60000
    }
  },
  "environments": {
    "development": {
      "baseUrl": "http://localhost:3000",
      "logging": {
        "level": "debug"
      },
      "security": {
        "enableRateLimit": false
      }
    },
    "production": {
      "baseUrl": "https://your-domain.com",
      "logging": {
        "level": "warn"
      },
      "security": {
        "enableRateLimit": true,
        "enableCSRF": true
      }
    }
  },
  "metadata": {
    "version": "1.0.0",
    "created": "2024-01-15T00:00:00.000Z",
    "updated": "2024-01-15T00:00:00.000Z",
    "author": "3D-SCO Development Team",
    "description": "MCP (Model Context Protocol) configuration for 3D-SCO application",
    "license": "MIT",
    "repository": "https://github.com/your-org/3d-sco",
    "documentation": "https://docs.your-domain.com/mcp"
  }
}