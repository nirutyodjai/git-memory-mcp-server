{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "type": "object",
  "title": "NEXUS IDE Security Dashboard Helm Chart Values Schema",
  "description": "JSON Schema for validating values.yaml configuration",
  "properties": {
    "global": {
      "type": "object",
      "description": "Global configuration values",
      "properties": {
        "imageRegistry": {
          "type": "string",
          "description": "Global Docker image registry"
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "Global image pull secrets",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": ["name"]
          }
        },
        "storageClass": {
          "type": "string",
          "description": "Global storage class"
        }
      }
    },
    "nameOverride": {
      "type": "string",
      "description": "Override the name of the chart"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override the full name of the chart"
    },
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "default": 1,
      "description": "Number of replicas for the main application"
    },
    "image": {
      "type": "object",
      "description": "Container image configuration",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository",
          "pattern": "^[a-z0-9]+(?:[._-][a-z0-9]+)*(?:/[a-z0-9]+(?:[._-][a-z0-9]+)*)*$"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag",
          "pattern": "^[a-zA-Z0-9._-]+$"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "default": "IfNotPresent",
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "tag"]
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "Image pull secrets",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": ["name"]
      }
    },
    "serviceAccount": {
      "type": "object",
      "description": "Service account configuration",
      "properties": {
        "create": {
          "type": "boolean",
          "default": true,
          "description": "Create a service account"
        },
        "annotations": {
          "type": "object",
          "description": "Service account annotations"
        },
        "name": {
          "type": "string",
          "description": "Service account name"
        }
      }
    },
    "podAnnotations": {
      "type": "object",
      "description": "Pod annotations"
    },
    "podSecurityContext": {
      "type": "object",
      "description": "Pod security context",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "minimum": 0
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "securityContext": {
      "type": "object",
      "description": "Container security context",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "type": "object",
          "properties": {
            "drop": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "add": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "service": {
      "type": "object",
      "description": "Service configuration",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
          "default": "ClusterIP",
          "description": "Service type"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "default": 80,
          "description": "Service port"
        },
        "targetPort": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Target port"
        },
        "annotations": {
          "type": "object",
          "description": "Service annotations"
        }
      }
    },
    "ingress": {
      "type": "object",
      "description": "Ingress configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable ingress"
        },
        "className": {
          "type": "string",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "description": "Ingress annotations"
        },
        "hosts": {
          "type": "array",
          "description": "Ingress hosts",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "format": "hostname"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "pathType": {
                      "type": "string",
                      "enum": ["Exact", "Prefix", "ImplementationSpecific"]
                    }
                  },
                  "required": ["path", "pathType"]
                }
              }
            },
            "required": ["host", "paths"]
          }
        },
        "tls": {
          "type": "array",
          "description": "TLS configuration",
          "items": {
            "type": "object",
            "properties": {
              "secretName": {
                "type": "string"
              },
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "hostname"
                }
              }
            },
            "required": ["secretName", "hosts"]
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "description": "Resource limits and requests",
      "properties": {
        "limits": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(m|[0-9]*\.?[0-9]*)?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$"
            }
          }
        },
        "requests": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "pattern": "^[0-9]+(m|[0-9]*\.?[0-9]*)?$"
            },
            "memory": {
              "type": "string",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$"
            }
          }
        }
      }
    },
    "autoscaling": {
      "type": "object",
      "description": "Horizontal Pod Autoscaler configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable HPA"
        },
        "minReplicas": {
          "type": "integer",
          "minimum": 1,
          "default": 1,
          "description": "Minimum number of replicas"
        },
        "maxReplicas": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 100,
          "description": "Maximum number of replicas"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 80,
          "description": "Target CPU utilization percentage"
        },
        "targetMemoryUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Target memory utilization percentage"
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector"
    },
    "tolerations": {
      "type": "array",
      "description": "Pod tolerations",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": ["Equal", "Exists"]
          },
          "value": {
            "type": "string"
          },
          "effect": {
            "type": "string",
            "enum": ["NoSchedule", "PreferNoSchedule", "NoExecute"]
          },
          "tolerationSeconds": {
            "type": "integer",
            "minimum": 0
          }
        }
      }
    },
    "affinity": {
      "type": "object",
      "description": "Pod affinity and anti-affinity"
    },
    "persistence": {
      "type": "object",
      "description": "Persistence configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable persistence"
        },
        "storageClass": {
          "type": "string",
          "description": "Storage class name"
        },
        "accessMode": {
          "type": "string",
          "enum": ["ReadWriteOnce", "ReadOnlyMany", "ReadWriteMany"],
          "default": "ReadWriteOnce",
          "description": "Access mode"
        },
        "size": {
          "type": "string",
          "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$",
          "default": "10Gi",
          "description": "Storage size"
        }
      }
    },
    "postgresql": {
      "type": "object",
      "description": "PostgreSQL configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable PostgreSQL"
        },
        "auth": {
          "type": "object",
          "properties": {
            "postgresPassword": {
              "type": "string",
              "minLength": 8,
              "description": "PostgreSQL admin password"
            },
            "username": {
              "type": "string",
              "description": "PostgreSQL username"
            },
            "password": {
              "type": "string",
              "minLength": 8,
              "description": "PostgreSQL user password"
            },
            "database": {
              "type": "string",
              "description": "PostgreSQL database name"
            }
          }
        },
        "primary": {
          "type": "object",
          "properties": {
            "persistence": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "size": {
                  "type": "string",
                  "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$",
                  "default": "8Gi"
                }
              }
            }
          }
        }
      }
    },
    "redis": {
      "type": "object",
      "description": "Redis configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable Redis"
        },
        "auth": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "password": {
              "type": "string",
              "minLength": 8,
              "description": "Redis password"
            }
          }
        },
        "master": {
          "type": "object",
          "properties": {
            "persistence": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "size": {
                  "type": "string",
                  "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$",
                  "default": "8Gi"
                }
              }
            }
          }
        }
      }
    },
    "mongodb": {
      "type": "object",
      "description": "MongoDB configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable MongoDB"
        },
        "auth": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "rootPassword": {
              "type": "string",
              "minLength": 8,
              "description": "MongoDB root password"
            },
            "username": {
              "type": "string",
              "description": "MongoDB username"
            },
            "password": {
              "type": "string",
              "minLength": 8,
              "description": "MongoDB user password"
            },
            "database": {
              "type": "string",
              "description": "MongoDB database name"
            }
          }
        },
        "persistence": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "size": {
              "type": "string",
              "pattern": "^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$",
              "default": "8Gi"
            }
          }
        }
      }
    },
    "auth": {
      "type": "object",
      "description": "Authentication configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable authentication"
        },
        "oauth": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "issuerUrl": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        "ldap": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "url": {
              "type": "string",
              "format": "uri"
            },
            "bindDN": {
              "type": "string"
            },
            "bindPassword": {
              "type": "string"
            },
            "searchBase": {
              "type": "string"
            }
          }
        },
        "saml": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "entityId": {
              "type": "string"
            },
            "ssoUrl": {
              "type": "string",
              "format": "uri"
            },
            "certificate": {
              "type": "string"
            }
          }
        }
      }
    },
    "tls": {
      "type": "object",
      "description": "TLS configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable TLS"
        },
        "secretName": {
          "type": "string",
          "description": "TLS secret name"
        },
        "certManager": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "issuer": {
              "type": "string"
            },
            "clusterIssuer": {
              "type": "string"
            }
          }
        }
      }
    },
    "monitoring": {
      "type": "object",
      "description": "Monitoring configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable monitoring"
        },
        "prometheus": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "serviceMonitor": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "interval": {
                  "type": "string",
                  "pattern": "^[0-9]+(s|m|h)$",
                  "default": "30s"
                },
                "scrapeTimeout": {
                  "type": "string",
                  "pattern": "^[0-9]+(s|m|h)$",
                  "default": "10s"
                }
              }
            }
          }
        },
        "grafana": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "dashboards": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        },
        "jaeger": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "agent": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string"
                },
                "port": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                }
              }
            }
          }
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Logging configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable centralized logging"
        },
        "level": {
          "type": "string",
          "enum": ["debug", "info", "warn", "error"],
          "default": "info",
          "description": "Log level"
        },
        "elasticsearch": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "host": {
              "type": "string"
            },
            "port": {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            }
          }
        }
      }
    },
    "backup": {
      "type": "object",
      "description": "Backup configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable backup"
        },
        "schedule": {
          "type": "string",
          "pattern": "^(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})$",
          "default": "0 2 * * *",
          "description": "Backup schedule (cron format)"
        },
        "retention": {
          "type": "integer",
          "minimum": 1,
          "default": 7,
          "description": "Backup retention days"
        },
        "s3": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "bucket": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "accessKeyId": {
              "type": "string"
            },
            "secretAccessKey": {
              "type": "string"
            }
          }
        }
      }
    },
    "security": {
      "type": "object",
      "description": "Security configuration",
      "properties": {
        "networkPolicy": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable network policies"
            },
            "ingress": {
              "type": "array",
              "description": "Ingress rules"
            },
            "egress": {
              "type": "array",
              "description": "Egress rules"
            }
          }
        },
        "podSecurityPolicy": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable pod security policy"
            }
          }
        },
        "rbac": {
          "type": "object",
          "properties": {
            "create": {
              "type": "boolean",
              "default": true,
              "description": "Create RBAC resources"
            }
          }
        }
      }
    },
    "ai": {
      "type": "object",
      "description": "AI configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable AI features"
        },
        "models": {
          "type": "object",
          "properties": {
            "openai": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "apiKey": {
                  "type": "string"
                },
                "model": {
                  "type": "string",
                  "default": "gpt-4"
                }
              }
            },
            "anthropic": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "apiKey": {
                  "type": "string"
                },
                "model": {
                  "type": "string",
                  "default": "claude-3-sonnet-20240229"
                }
              }
            },
            "local": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": false
                },
                "model": {
                  "type": "string"
                },
                "endpoint": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        },
        "gpu": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "count": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "type": {
              "type": "string",
              "default": "nvidia.com/gpu"
            }
          }
        }
      }
    },
    "websocket": {
      "type": "object",
      "description": "WebSocket configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable WebSocket service"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "default": 8080,
          "description": "WebSocket port"
        },
        "maxConnections": {
          "type": "integer",
          "minimum": 1,
          "default": 1000,
          "description": "Maximum WebSocket connections"
        }
      }
    },
    "collaboration": {
      "type": "object",
      "description": "Collaboration features configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable collaboration features"
        },
        "maxUsers": {
          "type": "integer",
          "minimum": 1,
          "default": 100,
          "description": "Maximum concurrent users"
        },
        "voiceChat": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "videoChat": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "development": {
      "type": "object",
      "description": "Development mode configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable development mode"
        },
        "debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug mode"
        },
        "hotReload": {
          "type": "boolean",
          "default": false,
          "description": "Enable hot reload"
        }
      }
    },
    "jobs": {
      "type": "object",
      "description": "Job configuration",
      "properties": {
        "migration": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enable database migration job"
            }
          }
        },
        "backup": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable backup job"
            },
            "schedule": {
              "type": "string",
              "pattern": "^(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})$",
              "default": "0 2 * * *"
            }
          }
        },
        "cleanup": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable cleanup job"
            },
            "schedule": {
              "type": "string",
              "pattern": "^(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})$",
              "default": "0 3 * * 0"
            }
          }
        },
        "securityScan": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable security scan job"
            },
            "schedule": {
              "type": "string",
              "pattern": "^(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|µs|ms|s|m|h))+)|((((\\d+,)+\\d+|(\\d+(\\/|-)\\d+)|\\d+|\\*) ?){5,7})$",
              "default": "0 1 * * *"
            }
          }
        }
      }
    }
  },
  "required": [
    "replicaCount",
    "image"
  ],
  "additionalProperties": false
}