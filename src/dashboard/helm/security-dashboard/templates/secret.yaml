{{/*
=============================================================================
ENTERPRISE SECURITY DASHBOARD - SECRET TEMPLATE
Kubernetes Secrets for Sensitive Configuration Data
=============================================================================
*/}}

{{- include "security-dashboard.validateRequired" . }}
{{- include "security-dashboard.validateConfig" . }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.fullname" . }}-secret
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: secret
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-10"
    helm.sh/hook-delete-policy: before-hook-creation
type: Opaque
data:
  # =============================================================================
  # DATABASE CONNECTIONS
  # =============================================================================
  
  # PostgreSQL Connection
  {{- if .Values.postgresql.enabled }}
  database-url: {{ include "security-dashboard.postgresql.connectionString" . | b64enc }}
  postgres-password: {{ .Values.postgresql.auth.password | b64enc }}
  {{- else }}
  database-url: {{ .Values.externalDatabase.connectionString | b64enc }}
  {{- if .Values.externalDatabase.password }}
  postgres-password: {{ .Values.externalDatabase.password | b64enc }}
  {{- end }}
  {{- end }}
  
  # Redis Connection
  {{- if .Values.redis.enabled }}
  redis-url: {{ include "security-dashboard.redis.connectionString" . | b64enc }}
  {{- if .Values.redis.auth.enabled }}
  redis-password: {{ .Values.redis.auth.password | b64enc }}
  {{- end }}
  {{- else }}
  redis-url: {{ .Values.externalRedis.connectionString | b64enc }}
  {{- if .Values.externalRedis.password }}
  redis-password: {{ .Values.externalRedis.password | b64enc }}
  {{- end }}
  {{- end }}
  
  # MongoDB Connection
  {{- if .Values.mongodb.enabled }}
  mongodb-url: {{ include "security-dashboard.mongodb.connectionString" . | b64enc }}
  {{- if .Values.mongodb.auth.enabled }}
  mongodb-password: {{ .Values.mongodb.auth.password | b64enc }}
  {{- end }}
  {{- else }}
  mongodb-url: {{ .Values.externalMongoDB.connectionString | b64enc }}
  {{- if .Values.externalMongoDB.password }}
  mongodb-password: {{ .Values.externalMongoDB.password | b64enc }}
  {{- end }}
  {{- end }}
  
  # =============================================================================
  # AUTHENTICATION & SECURITY
  # =============================================================================
  
  # JWT Secrets
  jwt-secret: {{ .Values.security.auth.jwt.secret | default (randAlphaNum 32) | b64enc }}
  jwt-refresh-secret: {{ .Values.security.auth.jwt.refreshSecret | default (randAlphaNum 32) | b64enc }}
  
  # Session Secret
  session-secret: {{ .Values.security.auth.sessionSecret | default (randAlphaNum 32) | b64enc }}
  
  # Encryption Keys
  encryption-key: {{ .Values.security.encryption.key | default (randAlphaNum 32) | b64enc }}
  encryption-iv: {{ .Values.security.encryption.iv | default (randAlphaNum 16) | b64enc }}
  
  # API Keys
  {{- if .Values.security.apiKeys }}
  {{- range $name, $key := .Values.security.apiKeys }}
  api-key-{{ $name }}: {{ $key | b64enc }}
  {{- end }}
  {{- end }}
  
  # OAuth Secrets
  {{- if .Values.security.auth.oauth.enabled }}
  oauth-client-id: {{ .Values.security.auth.oauth.clientId | b64enc }}
  oauth-client-secret: {{ .Values.security.auth.oauth.clientSecret | b64enc }}
  {{- end }}
  
  # LDAP Credentials
  {{- if .Values.security.auth.ldap.enabled }}
  ldap-bind-dn: {{ .Values.security.auth.ldap.bindDN | b64enc }}
  ldap-bind-password: {{ .Values.security.auth.ldap.bindPassword | b64enc }}
  {{- end }}
  
  # SAML Configuration
  {{- if .Values.security.auth.saml.enabled }}
  saml-cert: {{ .Values.security.auth.saml.cert | b64enc }}
  saml-private-key: {{ .Values.security.auth.saml.privateKey | b64enc }}
  {{- end }}
  
  # =============================================================================
  # EXTERNAL SERVICES
  # =============================================================================
  
  # Email Service Credentials
  {{- if .Values.externalServices.email.enabled }}
  email-api-key: {{ .Values.externalServices.email.apiKey | b64enc }}
  {{- if .Values.externalServices.email.smtp.enabled }}
  smtp-username: {{ .Values.externalServices.email.smtp.username | b64enc }}
  smtp-password: {{ .Values.externalServices.email.smtp.password | b64enc }}
  {{- end }}
  {{- end }}
  
  # SMS Service Credentials
  {{- if .Values.externalServices.sms.enabled }}
  sms-api-key: {{ .Values.externalServices.sms.apiKey | b64enc }}
  sms-api-secret: {{ .Values.externalServices.sms.apiSecret | b64enc }}
  {{- end }}
  
  # Slack Integration
  {{- if .Values.externalServices.slack.enabled }}
  slack-bot-token: {{ .Values.externalServices.slack.botToken | b64enc }}
  slack-signing-secret: {{ .Values.externalServices.slack.signingSecret | b64enc }}
  {{- end }}
  
  # GitHub Integration
  {{- if .Values.externalServices.github.enabled }}
  github-token: {{ .Values.externalServices.github.token | b64enc }}
  github-webhook-secret: {{ .Values.externalServices.github.webhookSecret | b64enc }}
  {{- end }}
  
  # GitLab Integration
  {{- if .Values.externalServices.gitlab.enabled }}
  gitlab-token: {{ .Values.externalServices.gitlab.token | b64enc }}
  gitlab-webhook-secret: {{ .Values.externalServices.gitlab.webhookSecret | b64enc }}
  {{- end }}
  
  # =============================================================================
  # MONITORING & OBSERVABILITY
  # =============================================================================
  
  # Prometheus Basic Auth
  {{- if .Values.monitoring.prometheus.auth.enabled }}
  prometheus-username: {{ .Values.monitoring.prometheus.auth.username | b64enc }}
  prometheus-password: {{ .Values.monitoring.prometheus.auth.password | b64enc }}
  {{- end }}
  
  # Grafana Admin Credentials
  {{- if .Values.monitoring.grafana.enabled }}
  grafana-admin-user: {{ .Values.monitoring.grafana.adminUser | default "admin" | b64enc }}
  grafana-admin-password: {{ .Values.monitoring.grafana.adminPassword | default (randAlphaNum 16) | b64enc }}
  {{- end }}
  
  # Jaeger Authentication
  {{- if .Values.monitoring.jaeger.auth.enabled }}
  jaeger-username: {{ .Values.monitoring.jaeger.auth.username | b64enc }}
  jaeger-password: {{ .Values.monitoring.jaeger.auth.password | b64enc }}
  {{- end }}
  
  # ElasticSearch Credentials
  {{- if .Values.logging.elasticsearch.auth.enabled }}
  elasticsearch-username: {{ .Values.logging.elasticsearch.auth.username | b64enc }}
  elasticsearch-password: {{ .Values.logging.elasticsearch.auth.password | b64enc }}
  {{- end }}
  
  # =============================================================================
  # BACKUP & STORAGE
  # =============================================================================
  
  # AWS S3 Credentials
  {{- if eq .Values.backup.storage.type "s3" }}
  aws-access-key-id: {{ .Values.backup.storage.s3.accessKeyId | b64enc }}
  aws-secret-access-key: {{ .Values.backup.storage.s3.secretAccessKey | b64enc }}
  {{- end }}
  
  # Google Cloud Storage
  {{- if eq .Values.backup.storage.type "gcs" }}
  gcs-service-account-key: {{ .Values.backup.storage.gcs.serviceAccountKey | b64enc }}
  {{- end }}
  
  # Azure Blob Storage
  {{- if eq .Values.backup.storage.type "azure" }}
  azure-storage-account: {{ .Values.backup.storage.azure.storageAccount | b64enc }}
  azure-storage-key: {{ .Values.backup.storage.azure.storageKey | b64enc }}
  {{- end }}
  
  # =============================================================================
  # AI & ML SERVICES
  # =============================================================================
  
  # OpenAI API Key
  {{- if .Values.ai.openai.enabled }}
  openai-api-key: {{ .Values.ai.openai.apiKey | b64enc }}
  {{- end }}
  
  # Anthropic Claude API Key
  {{- if .Values.ai.anthropic.enabled }}
  anthropic-api-key: {{ .Values.ai.anthropic.apiKey | b64enc }}
  {{- end }}
  
  # Google AI API Key
  {{- if .Values.ai.google.enabled }}
  google-ai-api-key: {{ .Values.ai.google.apiKey | b64enc }}
  {{- end }}
  
  # Hugging Face API Key
  {{- if .Values.ai.huggingface.enabled }}
  huggingface-api-key: {{ .Values.ai.huggingface.apiKey | b64enc }}
  {{- end }}
  
  # =============================================================================
  # CUSTOM SECRETS
  # =============================================================================
  
  {{- with .Values.customSecrets }}
  {{- range $key, $value := . }}
  {{ $key }}: {{ $value | b64enc }}
  {{- end }}
  {{- end }}

---
# =============================================================================
# TLS CERTIFICATE SECRET
# =============================================================================

{{- if and .Values.ingress.enabled .Values.ingress.tls }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.tlsSecretName" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: tls-certificate
  annotations:
    {{- if .Values.tls.certManager.enabled }}
    cert-manager.io/issuer: {{ .Values.tls.certManager.issuer.name }}
    cert-manager.io/issuer-kind: {{ .Values.tls.certManager.issuer.kind }}
    {{- end }}
type: kubernetes.io/tls
data:
  {{- if .Values.tls.certificate }}
  tls.crt: {{ .Values.tls.certificate | b64enc }}
  tls.key: {{ .Values.tls.privateKey | b64enc }}
  {{- else }}
  {{- include "security-dashboard.gen-certs" . | nindent 2 }}
  {{- end }}
{{- end }}

---
# =============================================================================
# DOCKER REGISTRY SECRET
# =============================================================================

{{- if .Values.app.image.pullSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.fullname" . }}-registry-secret
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: registry-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: |
    {{- $registry := .Values.app.image.registry | default "docker.io" }}
    {{- $username := .Values.app.image.pullSecrets.username }}
    {{- $password := .Values.app.image.pullSecrets.password }}
    {{- $email := .Values.app.image.pullSecrets.email | default "" }}
    {{- $auth := printf "%s:%s" $username $password | b64enc }}
    {{- $config := dict "auths" (dict $registry (dict "username" $username "password" $password "email" $email "auth" $auth)) }}
    {{ $config | toJson | b64enc }}
{{- end }}

---
# =============================================================================
# SERVICE ACCOUNT TOKEN SECRET
# =============================================================================

{{- if .Values.security.serviceAccount.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.serviceAccountName" . }}-token
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: service-account-token
  annotations:
    kubernetes.io/service-account.name: {{ include "security-dashboard.serviceAccountName" . }}
type: kubernetes.io/service-account-token
{{- end }}

---
# =============================================================================
# WEBHOOK CERTIFICATES SECRET
# =============================================================================

{{- if .Values.security.webhooks.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.fullname" . }}-webhook-certs
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: webhook-certificates
type: Opaque
data:
  {{- $cn := printf "%s-webhook" (include "security-dashboard.fullname" .) }}
  {{- $altNames := list $cn (printf "%s.%s" $cn .Release.Namespace) (printf "%s.%s.svc" $cn .Release.Namespace) }}
  {{- $ca := genCA "security-dashboard-webhook-ca" 3650 }}
  {{- $cert := genSignedCert $cn nil $altNames 3650 $ca }}
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
{{- end }}

---
# =============================================================================
# BACKUP ENCRYPTION SECRET
# =============================================================================

{{- if .Values.backup.encryption.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.fullname" . }}-backup-encryption
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup-encryption
type: Opaque
data:
  encryption-key: {{ .Values.backup.encryption.key | default (randAlphaNum 32) | b64enc }}
  encryption-passphrase: {{ .Values.backup.encryption.passphrase | default (randAlphaNum 64) | b64enc }}
{{- end }}

---
# =============================================================================
# MONITORING CREDENTIALS SECRET
# =============================================================================

{{- if .Values.monitoring.credentials.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "security-dashboard.fullname" . }}-monitoring-creds
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "security-dashboard.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring-credentials
type: Opaque
data:
  # Basic Auth for Monitoring Endpoints
  monitoring-username: {{ .Values.monitoring.credentials.username | default "monitor" | b64enc }}
  monitoring-password: {{ .Values.monitoring.credentials.password | default (randAlphaNum 16) | b64enc }}
  
  # API Keys for External Monitoring Services
  {{- if .Values.monitoring.credentials.datadog.apiKey }}
  datadog-api-key: {{ .Values.monitoring.credentials.datadog.apiKey | b64enc }}
  datadog-app-key: {{ .Values.monitoring.credentials.datadog.appKey | b64enc }}
  {{- end }}
  
  {{- if .Values.monitoring.credentials.newrelic.apiKey }}
  newrelic-api-key: {{ .Values.monitoring.credentials.newrelic.apiKey | b64enc }}
  newrelic-license-key: {{ .Values.monitoring.credentials.newrelic.licenseKey | b64enc }}
  {{- end }}
{{- end }}

# =============================================================================
# END OF SECRET TEMPLATES
# =============================================================================