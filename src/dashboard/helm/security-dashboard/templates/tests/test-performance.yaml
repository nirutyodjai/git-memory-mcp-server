{{- if .Values.monitoring.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "nexus-ide.fullname" . }}-test-performance"
  labels:
    {{- include "nexus-ide.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: performance-test
      image: curlimages/curl:8.5.0
      command:
        - /bin/sh
        - -c
        - |
          echo "Testing Performance Metrics..."
          
          # Test Metrics Endpoint
          echo "Testing metrics endpoint..."
          curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/metrics
          if [ $? -eq 0 ]; then
            echo "✓ Metrics endpoint test successful"
          else
            echo "✗ Metrics endpoint test failed"
            exit 1
          fi
          
          # Test Health Check Response Time
          echo "Testing health check response time..."
          start_time=$(date +%s%N)
          curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/health
          end_time=$(date +%s%N)
          response_time=$(( (end_time - start_time) / 1000000 ))
          echo "Health check response time: ${response_time}ms"
          
          if [ $response_time -lt 1000 ]; then
            echo "✓ Health check response time acceptable (<1000ms)"
          else
            echo "⚠ Health check response time high (>1000ms)"
          fi
          
          # Test API Response Time
          echo "Testing API response time..."
          start_time=$(date +%s%N)
          curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/status
          end_time=$(date +%s%N)
          api_response_time=$(( (end_time - start_time) / 1000000 ))
          echo "API response time: ${api_response_time}ms"
          
          if [ $api_response_time -lt 2000 ]; then
            echo "✓ API response time acceptable (<2000ms)"
          else
            echo "⚠ API response time high (>2000ms)"
          fi
          
          # Test Memory Usage (if available)
          echo "Testing memory usage endpoint..."
          curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/system/memory
          if [ $? -eq 0 ]; then
            echo "✓ Memory usage endpoint test successful"
          else
            echo "⚠ Memory usage endpoint test failed"
          fi
          
          # Test CPU Usage (if available)
          echo "Testing CPU usage endpoint..."
          curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/system/cpu
          if [ $? -eq 0 ]; then
            echo "✓ CPU usage endpoint test successful"
          else
            echo "⚠ CPU usage endpoint test failed"
          fi
          
          # Load Test (Simple)
          echo "Running simple load test..."
          for i in $(seq 1 10); do
            curl -f -s {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/health > /dev/null &
          done
          wait
          echo "✓ Simple load test completed (10 concurrent requests)"
          
          echo "Performance tests completed"
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
  {{- with .Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "nexus-ide.fullname" . }}-test-security"
  labels:
    {{- include "nexus-ide.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: security-test
      image: curlimages/curl:8.5.0
      command:
        - /bin/sh
        - -c
        - |
          echo "Testing Security Features..."
          
          # Test HTTPS Redirect (if enabled)
          {{- if .Values.ingress.tls }}
          echo "Testing HTTPS redirect..."
          response=$(curl -s -o /dev/null -w "%{http_code}" http://{{ .Values.ingress.host }}/)
          if [ "$response" = "301" ] || [ "$response" = "302" ]; then
            echo "✓ HTTPS redirect working correctly"
          else
            echo "⚠ HTTPS redirect not configured or not working"
          fi
          {{- end }}
          
          # Test Security Headers
          echo "Testing security headers..."
          headers=$(curl -s -I {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/health)
          
          if echo "$headers" | grep -i "x-frame-options" > /dev/null; then
            echo "✓ X-Frame-Options header present"
          else
            echo "⚠ X-Frame-Options header missing"
          fi
          
          if echo "$headers" | grep -i "x-content-type-options" > /dev/null; then
            echo "✓ X-Content-Type-Options header present"
          else
            echo "⚠ X-Content-Type-Options header missing"
          fi
          
          if echo "$headers" | grep -i "strict-transport-security" > /dev/null; then
            echo "✓ Strict-Transport-Security header present"
          else
            echo "⚠ Strict-Transport-Security header missing"
          fi
          
          # Test Authentication Endpoint
          echo "Testing authentication endpoint..."
          auth_response=$(curl -s -o /dev/null -w "%{http_code}" {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/auth/status)
          if [ "$auth_response" = "200" ] || [ "$auth_response" = "401" ]; then
            echo "✓ Authentication endpoint responding correctly"
          else
            echo "⚠ Authentication endpoint not responding as expected"
          fi
          
          # Test Rate Limiting (if enabled)
          {{- if .Values.security.rateLimiting.enabled }}
          echo "Testing rate limiting..."
          rate_limit_test=0
          for i in $(seq 1 {{ add .Values.security.rateLimiting.requests 5 }}); do
            response=$(curl -s -o /dev/null -w "%{http_code}" {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/status)
            if [ "$response" = "429" ]; then
              rate_limit_test=1
              break
            fi
            sleep 0.1
          done
          
          if [ $rate_limit_test -eq 1 ]; then
            echo "✓ Rate limiting working correctly"
          else
            echo "⚠ Rate limiting not triggered (may need adjustment)"
          fi
          {{- end }}
          
          # Test CORS Headers (if enabled)
          {{- if .Values.security.cors.enabled }}
          echo "Testing CORS headers..."
          cors_response=$(curl -s -H "Origin: https://example.com" -I {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/status)
          if echo "$cors_response" | grep -i "access-control-allow-origin" > /dev/null; then
            echo "✓ CORS headers present"
          else
            echo "⚠ CORS headers missing"
          fi
          {{- end }}
          
          # Test Input Validation
          echo "Testing input validation..."
          validation_response=$(curl -s -o /dev/null -w "%{http_code}" -X POST {{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/test/validation \
            -H "Content-Type: application/json" \
            -d '{"malicious": "<script>alert(1)</script>"}')
          if [ "$validation_response" = "400" ] || [ "$validation_response" = "422" ]; then
            echo "✓ Input validation working correctly"
          else
            echo "⚠ Input validation may need improvement"
          fi
          
          # Test SQL Injection Protection
          echo "Testing SQL injection protection..."
          sql_response=$(curl -s -o /dev/null -w "%{http_code}" "{{ include "nexus-ide.fullname" . }}:{{ .Values.service.port }}/api/search?q='; DROP TABLE users; --")
          if [ "$sql_response" = "400" ] || [ "$sql_response" = "422" ] || [ "$sql_response" = "200" ]; then
            echo "✓ SQL injection protection test completed"
          else
            echo "⚠ Unexpected response to SQL injection test"
          fi
          
          echo "Security tests completed"
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
  {{- with .Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}