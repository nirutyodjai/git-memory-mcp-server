# =============================================================================
# ENTERPRISE SECURITY DASHBOARD - PROMETHEUS CONFIGURATION
# Advanced Monitoring and Alerting Configuration
# =============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    cluster: 'security-dashboard'
    environment: 'production'
    datacenter: 'primary'

# =============================================================================
# RULE FILES
# =============================================================================
rule_files:
  - "rules/*.yml"
  - "rules/alerts/*.yml"
  - "rules/recording/*.yml"

# =============================================================================
# ALERTING CONFIGURATION
# =============================================================================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v2

# =============================================================================
# SCRAPE CONFIGURATIONS
# =============================================================================
scrape_configs:
  # ---------------------------------------------------------------------------
  # Prometheus Self-Monitoring
  # ---------------------------------------------------------------------------
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics
    
  # ---------------------------------------------------------------------------
  # Security Dashboard Application
  # ---------------------------------------------------------------------------
  - job_name: 'security-dashboard'
    static_configs:
      - targets: 
          - 'security-dashboard:3000'
          - 'security-dashboard:3001'  # WebSocket port
    scrape_interval: 15s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: security-dashboard:3000
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop
      - source_labels: [__name__]
        regex: 'process_.*'
        action: drop
        
  # ---------------------------------------------------------------------------
  # Node Exporter (System Metrics)
  # ---------------------------------------------------------------------------
  - job_name: 'node-exporter'
    static_configs:
      - targets:
          - 'node-exporter:9100'
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.*)'
        replacement: '${1}'
    metric_relabel_configs:
      # Keep only essential node metrics
      - source_labels: [__name__]
        regex: 'node_(cpu_seconds_total|memory_.*|disk_.*|network_.*|filesystem_.*|load.*|up)'
        action: keep
        
  # ---------------------------------------------------------------------------
  # PostgreSQL Database
  # ---------------------------------------------------------------------------
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    params:
      collect[]:
        - 'pg_stat_database'
        - 'pg_stat_user_tables'
        - 'pg_stat_activity'
        - 'pg_locks'
        - 'pg_stat_replication'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-primary'
        
  # ---------------------------------------------------------------------------
  # Redis Cache
  # ---------------------------------------------------------------------------
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis-primary'
        
  # ---------------------------------------------------------------------------
  # MongoDB (Optional)
  # ---------------------------------------------------------------------------
  - job_name: 'mongodb-exporter'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'mongodb-primary'
        
  # ---------------------------------------------------------------------------
  # Nginx Reverse Proxy
  # ---------------------------------------------------------------------------
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'nginx-proxy'
        
  # ---------------------------------------------------------------------------
  # Docker Container Metrics
  # ---------------------------------------------------------------------------
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'docker-host'
    metric_relabel_configs:
      # Keep only container metrics we care about
      - source_labels: [__name__]
        regex: 'container_(cpu_usage_seconds_total|memory_usage_bytes|network_.*|fs_.*|spec_.*)'
        action: keep
      - source_labels: [container_label_com_docker_compose_service]
        target_label: service
      - source_labels: [container_label_com_docker_compose_project]
        target_label: project
        
  # ---------------------------------------------------------------------------
  # Blackbox Exporter (External Monitoring)
  # ---------------------------------------------------------------------------
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://dashboard.yourdomain.com
          - https://dashboard.yourdomain.com/api/health
          - https://dashboard.yourdomain.com/api/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
        
  - job_name: 'blackbox-tcp'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
          - postgres:5432
          - redis:6379
          - mongodb:27017
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
        
  # ---------------------------------------------------------------------------
  # Custom Application Metrics
  # ---------------------------------------------------------------------------
  - job_name: 'security-metrics'
    static_configs:
      - targets: ['security-dashboard:3000']
    scrape_interval: 15s
    metrics_path: /api/security/metrics
    params:
      format: ['prometheus']
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'security-engine'
        
  - job_name: 'performance-metrics'
    static_configs:
      - targets: ['security-dashboard:3000']
    scrape_interval: 30s
    metrics_path: /api/performance/metrics
    params:
      format: ['prometheus']
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'performance-monitor'
        
  # ---------------------------------------------------------------------------
  # Business Metrics
  # ---------------------------------------------------------------------------
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['security-dashboard:3000']
    scrape_interval: 60s
    metrics_path: /api/business/metrics
    params:
      format: ['prometheus']
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'business-analytics'
        
  # ---------------------------------------------------------------------------
  # Federation (Multi-Cluster)
  # ---------------------------------------------------------------------------
  - job_name: 'federate'
    scrape_interval: 15s
    honor_labels: true
    metrics_path: '/federate'
    params:
      'match[]':
        - '{job=~"prometheus|security-dashboard|postgres-exporter|redis-exporter"}'
        - '{__name__=~"job:.*"}'
        - '{__name__=~"up|security_.*|performance_.*"}'
    static_configs:
      - targets:
          - 'prometheus-secondary:9090'
          - 'prometheus-dr:9090'
    relabel_configs:
      - source_labels: [__address__]
        target_label: datacenter
        regex: 'prometheus-secondary:9090'
        replacement: 'secondary'
      - source_labels: [__address__]
        target_label: datacenter
        regex: 'prometheus-dr:9090'
        replacement: 'disaster-recovery'
        
# =============================================================================
# REMOTE WRITE CONFIGURATION (Optional)
# =============================================================================
remote_write:
  - url: "https://prometheus-remote-write.yourdomain.com/api/v1/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'security_.*|performance_.*|business_.*'
        action: keep
    basic_auth:
      username: "prometheus"
      password_file: "/etc/prometheus/remote_write_password"
    tls_config:
      insecure_skip_verify: false
      
# =============================================================================
# REMOTE READ CONFIGURATION (Optional)
# =============================================================================
remote_read:
  - url: "https://prometheus-remote-read.yourdomain.com/api/v1/read"
    read_recent: true
    basic_auth:
      username: "prometheus"
      password_file: "/etc/prometheus/remote_read_password"
    tls_config:
      insecure_skip_verify: false
      
# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true
    
# =============================================================================
# TRACING CONFIGURATION (Optional)
# =============================================================================
tracing:
  endpoint: "jaeger:14268/api/traces"
  sampling_fraction: 0.1
  
# =============================================================================
# FEATURE FLAGS
# =============================================================================
feature_flags:
  - "promql-at-modifier"
  - "promql-negative-offset"
  - "remote-write-receiver"
  - "exemplar-storage"
  - "expand-external-labels"
  - "memory-snapshot-on-shutdown"
  - "auto-gomaxprocs"
  
# =============================================================================
# END OF CONFIGURATION
# =============================================================================