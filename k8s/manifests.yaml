apiVersion: v1
kind: Namespace
metadata:
  name: git-memory
  labels:
    name: git-memory

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: git-memory-config
  namespace: git-memory
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  JAEGER_ENDPOINT: "http://jaeger-collector.jaeger:14268/api/traces"
  OTLP_ENDPOINT: "http://otel-collector.observability:4318/v1/traces"

---

apiVersion: v1
kind: Secret
metadata:
  name: git-memory-secrets
  namespace: git-memory
type: Opaque
data:
  # Base64 encoded values - update these with your actual secrets
  GIT_MEMORY_API_KEY: <base64-encoded-api-key>
  GIT_WEBHOOK_SECRET: <base64-encoded-webhook-secret>
  REDIS_PASSWORD: <base64-encoded-redis-password>
  POSTGRES_PASSWORD: <base64-encoded-postgres-password>

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-memory-server
  namespace: git-memory
  labels:
    app: git-memory-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: git-memory-server
  template:
    metadata:
      labels:
        app: git-memory-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: git-memory-server
        image: git-memory-mcp-server:latest
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: git-memory-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: git-memory-config
              key: LOG_LEVEL
        - name: ENABLE_METRICS
          valueFrom:
            configMapKeyRef:
              name: git-memory-config
              key: ENABLE_METRICS
        - name: ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              name: git-memory-config
              key: ENABLE_TRACING
        - name: GIT_MEMORY_API_KEY
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: GIT_MEMORY_API_KEY
        - name: GIT_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: GIT_WEBHOOK_SECRET
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: REDIS_PASSWORD
        - name: POSTGRES_URL
          value: "postgresql://postgres:5432/git_memory"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: POSTGRES_PASSWORD
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL

---

apiVersion: v1
kind: Service
metadata:
  name: git-memory-service
  namespace: git-memory
  labels:
    app: git-memory-server
spec:
  selector:
    app: git-memory-server
  ports:
  - name: http
    port: 80
    targetPort: 3000
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: git-memory-ingress
  namespace: git-memory
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - git-memory.your-domain.com
    secretName: git-memory-tls
  rules:
  - host: git-memory.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: git-memory-service
            port:
              number: 80
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: git-memory-service
            port:
              number: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: git-memory
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly
        - yes
        - --requirepass
        - $(REDIS_PASSWORD)
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 999

---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: git-memory
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: git-memory
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "git_memory"
        - name: POSTGRES_USER
          value: "git_memory"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-memory-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: git-memory
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: git-memory
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: git-memory
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:latest
        ports:
        - containerPort: 16686
        - containerPort: 14268
        - containerPort: 14250
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-service
  namespace: git-memory
spec:
  selector:
    app: jaeger
  ports:
  - name: ui
    port: 80
    targetPort: 16686
  - name: collector
    port: 14268
    targetPort: 14268
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ingress
  namespace: git-memory
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: jaeger.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-service
            port:
              number: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: git-memory
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: data
        emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: git-memory
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "alerts.yml"

    scrape_configs:
      - job_name: 'git-memory-server'
        static_configs:
          - targets: ['git-memory-service:9090']
        metrics_path: '/metrics'
        scrape_interval: 10s

      - job_name: 'redis'
        static_configs:
          - targets: ['redis-service:6379']
        scrape_interval: 30s

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: git-memory
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: git-memory
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /etc/grafana/dashboards
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: grafana-data
        emptyDir: {}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-provisioning
        configMap:
          name: grafana-provisioning

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: git-memory
data:
  git-memory-overview.json: |
    {
      "dashboard": {
        "title": "Git Memory MCP Server Overview",
        "tags": ["git-memory"],
        "panels": []
      }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  namespace: git-memory
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service:9090
      isDefault: true

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: git-memory
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: git-memory
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: grafana.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000

---

apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: git-memory-pdb
  namespace: git-memory
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: git-memory-server

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: git-memory-hpa
  namespace: git-memory
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: git-memory-server
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: git-memory-sa
  namespace: git-memory

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: git-memory-role
  namespace: git-memory
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: git-memory-rb
  namespace: git-memory
subjects:
- kind: ServiceAccount
  name: git-memory-sa
  namespace: git-memory
roleRef:
  kind: Role
  name: git-memory-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: git-memory-tls
  namespace: git-memory
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  tls.crt: <base64-encoded-cert>
  tls.key: <base64-encoded-key>
